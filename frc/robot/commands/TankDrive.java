// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands;
import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.RobotContainer;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.DriveTrain;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class TankDrive extends CommandBase {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
        private final DriveTrain m_driveTrain;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    private double rightDriveSpeed = 0.0;
    private double leftDriveSpeed = 0.0;
    //private Joystick leftJoystick = RobotContainer.getInstance().getLeftJoystick();
    //private Joystick rightJoystick = RobotContainer.getInstance().getRightJoystick();
    //private XboxController playerController = RobotContainer.getInstance().getOperatorController();


    public TankDrive(DriveTrain subsystem) {


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        m_driveTrain = subsystem;
        addRequirements(m_driveTrain);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        m_driveTrain.fullStop();
        leftDriveSpeed = 0.0;
        rightDriveSpeed = 0.0;
    }

    /* 
    if robot.see(Gavin)==True{
        drive.forwared == true
    }
    else {
        drive.stop()
    }
    */
    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
       // isEnabled(false);
       // while(isEnabled() && isOperatorControlled()){ // source: https://www.javatips.net/api/FRC1778-master/robot_projects/TankArcade/src/frc1778/TankArcade.java
            leftDriveSpeed = RobotContainer.getInstance().getLeftJoystick().getRawAxis(1);
            rightDriveSpeed = RobotContainer.getInstance().getRightJoystick().getRawAxis(1);
           // leftDriveSpeed = leftJoystick.getY(); //tried leftJoystick.getAxis(Joystick.AxisType.kY); doesn't work
           // rightDriveSpeed = rightJoystick.getRawAxis(1);
            //System.out.println(" haha" + leftDriveSpeed);
            m_driveTrain.drive(leftDriveSpeed, rightDriveSpeed); //source for diff drive error: https://www.chiefdelphi.com/t/output-not-updated-often-enough-while-using-differential-drive/162324/3
       // } //tried source: https://www.javatips.net/api/FRC1778-master/robot_projects/TankArcade/src/frc1778/TankArcade.java
        
    } 

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        m_driveTrain.drive(0.0, 0.0);
       // greenLight(true);
    }
   /* public boolean isEnabled(boolean greenLight) {
        return greenLight;
    }*/

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return false;
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
    

}
